// Code generated by ent, DO NOT EDIT.

package threadcount

import (
	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the threadcount type in the database.
	Label = "thread_count"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldReplyCount holds the string denoting the reply_count field in the database.
	FieldReplyCount = "reply_count"
	// FieldLikeCount holds the string denoting the like_count field in the database.
	FieldLikeCount = "like_count"
	// Table holds the table name of the threadcount in the database.
	Table = "thread_account"
)

// Columns holds all SQL columns for threadcount fields.
var Columns = []string{
	FieldID,
	FieldReplyCount,
	FieldLikeCount,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultReplyCount holds the default value on creation for the "reply_count" field.
	DefaultReplyCount int
	// DefaultLikeCount holds the default value on creation for the "like_count" field.
	DefaultLikeCount int
)

// OrderOption defines the ordering options for the ThreadCount queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByReplyCount orders the results by the reply_count field.
func ByReplyCount(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldReplyCount, opts...).ToFunc()
}

// ByLikeCount orders the results by the like_count field.
func ByLikeCount(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldLikeCount, opts...).ToFunc()
}
