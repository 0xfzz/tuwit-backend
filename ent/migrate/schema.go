// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// MediaColumns holds the columns for the "media" table.
	MediaColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "path", Type: field.TypeString},
		{Name: "category", Type: field.TypeEnum, Enums: []string{"IMAGE", "DOCUMENT", "OTHER"}},
	}
	// MediaTable holds the schema information for the "media" table.
	MediaTable = &schema.Table{
		Name:       "media",
		Columns:    MediaColumns,
		PrimaryKey: []*schema.Column{MediaColumns[0]},
	}
	// ThreadsColumns holds the columns for the "threads" table.
	ThreadsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "content", Type: field.TypeString, Size: 2147483647},
		{Name: "is_comment_disabled", Type: field.TypeBool, Default: false},
		{Name: "visibility", Type: field.TypeEnum, Enums: []string{"PRIVATE", "PUBLIC"}},
		{Name: "status", Type: field.TypeEnum, Enums: []string{"PUBLISHED", "DRAFT"}},
		{Name: "is_deleted", Type: field.TypeBool, Default: false},
		{Name: "thread_child_threads", Type: field.TypeInt, Nullable: true},
	}
	// ThreadsTable holds the schema information for the "threads" table.
	ThreadsTable = &schema.Table{
		Name:       "threads",
		Columns:    ThreadsColumns,
		PrimaryKey: []*schema.Column{ThreadsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "threads_threads_child_threads",
				Columns:    []*schema.Column{ThreadsColumns[6]},
				RefColumns: []*schema.Column{ThreadsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// UserAccountColumns holds the columns for the "user_account" table.
	UserAccountColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "email", Type: field.TypeString, Unique: true},
		{Name: "username", Type: field.TypeString, Unique: true},
		{Name: "password", Type: field.TypeString},
		{Name: "is_verified", Type: field.TypeBool, Default: false},
		{Name: "is_private", Type: field.TypeBool, Default: false},
		{Name: "is_email_verified", Type: field.TypeBool, Default: false},
	}
	// UserAccountTable holds the schema information for the "user_account" table.
	UserAccountTable = &schema.Table{
		Name:       "user_account",
		Columns:    UserAccountColumns,
		PrimaryKey: []*schema.Column{UserAccountColumns[0]},
	}
	// UserProfileColumns holds the columns for the "user_profile" table.
	UserProfileColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "display_name", Type: field.TypeString},
		{Name: "bio", Type: field.TypeString},
		{Name: "user_account_profile", Type: field.TypeInt, Unique: true},
		{Name: "user_profile_profile_picture", Type: field.TypeInt, Nullable: true},
		{Name: "user_profile_banner", Type: field.TypeInt, Nullable: true},
	}
	// UserProfileTable holds the schema information for the "user_profile" table.
	UserProfileTable = &schema.Table{
		Name:       "user_profile",
		Columns:    UserProfileColumns,
		PrimaryKey: []*schema.Column{UserProfileColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "user_profile_user_account_profile",
				Columns:    []*schema.Column{UserProfileColumns[3]},
				RefColumns: []*schema.Column{UserAccountColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "user_profile_media_profile_picture",
				Columns:    []*schema.Column{UserProfileColumns[4]},
				RefColumns: []*schema.Column{MediaColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "user_profile_media_banner",
				Columns:    []*schema.Column{UserProfileColumns[5]},
				RefColumns: []*schema.Column{MediaColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// ThreadImagesColumns holds the columns for the "thread_images" table.
	ThreadImagesColumns = []*schema.Column{
		{Name: "thread_id", Type: field.TypeInt},
		{Name: "media_id", Type: field.TypeInt},
	}
	// ThreadImagesTable holds the schema information for the "thread_images" table.
	ThreadImagesTable = &schema.Table{
		Name:       "thread_images",
		Columns:    ThreadImagesColumns,
		PrimaryKey: []*schema.Column{ThreadImagesColumns[0], ThreadImagesColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "thread_images_thread_id",
				Columns:    []*schema.Column{ThreadImagesColumns[0]},
				RefColumns: []*schema.Column{ThreadsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "thread_images_media_id",
				Columns:    []*schema.Column{ThreadImagesColumns[1]},
				RefColumns: []*schema.Column{MediaColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		MediaTable,
		ThreadsTable,
		UsersTable,
		UserAccountTable,
		UserProfileTable,
		ThreadImagesTable,
	}
)

func init() {
	ThreadsTable.ForeignKeys[0].RefTable = ThreadsTable
	UserAccountTable.Annotation = &entsql.Annotation{
		Table: "user_account",
	}
	UserProfileTable.ForeignKeys[0].RefTable = UserAccountTable
	UserProfileTable.ForeignKeys[1].RefTable = MediaTable
	UserProfileTable.ForeignKeys[2].RefTable = MediaTable
	UserProfileTable.Annotation = &entsql.Annotation{
		Table: "user_profile",
	}
	ThreadImagesTable.ForeignKeys[0].RefTable = ThreadsTable
	ThreadImagesTable.ForeignKeys[1].RefTable = MediaTable
}
